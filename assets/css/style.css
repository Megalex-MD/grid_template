/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
}

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0;
}

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block;
}

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */
}

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder;
}

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */
}

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none;
}

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */
}

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible;
}

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none;
}

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type=button],
[type=reset],
[type=submit] {
  -webkit-appearance: button;
}

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em;
}

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */
}

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline;
}

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto;
}

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type=search] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block;
}

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item;
}

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none;
}

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none;
}

/* ul */
/* xl */
/* lg */
/* md */
/* sm */
/* xs */
/* xx */
.posts__container, .form__container, .about__containter, .header-content__container, .header-menu__container {
  max-width: 1340px;
  margin: 0 auto;
  padding-right: 20px;
  padding-left: 20px;
}

*,
::before,
::after {
  box-sizing: border-box;
}

body {
  overflow-y: scroll;
  margin: 0;
  font-family: "Roboto", sans-serif;
  font-size: 16px;
  line-height: 1.15;
}

h1 {
  text-align: center;
  letter-spacing: 0.08em;
  color: #ffffff;
  font-family: "Roboto Slab", serif;
  font-weight: 300;
  line-height: 1.2;
}

h2 {
  font-family: "Roboto Slab", serif;
  color: #2d3651;
  letter-spacing: 0.1em;
  line-height: 1.2em;
}

a {
  text-decoration: none;
  color: #ffffff;
}

.btn {
  display: flex;
  align-items: center;
  justify-content: center;
  padding-right: 1em;
  padding-left: 1em;
  transition: background-color 0.5s;
  letter-spacing: 0.1em;
  color: #ffffff;
}
.btn--light {
  border: 2px solid #ffffff;
  background-color: rgba(255, 255, 255, 0.1);
}
.btn--primary {
  height: 60px;
  border: 2px solid #2d3651;
  background-color: rgba(45, 54, 81, 0.8);
  font-size: 1.125rem;
}
.btn:hover, .btn:focus {
  background-color: #d66926;
}

.header {
  position: relative;
  display: grid;
  align-items: center;
  min-height: 100vh;
  padding: 150px 0;
  background-color: #2d3651;
  background-image: url(../img/img-header.png);
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
}

.header-overlay {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(45, 54, 81, 0.8);
}

.header-menu {
  position: absolute;
  z-index: 2;
  top: 0;
  right: 0;
  left: 0;
}
.header-menu__container {
  display: grid;
  align-items: center;
  gap: 20px;
  grid-template-columns: auto 1fr;
}

.header-logo {
  letter-spacing: 0.22em;
  font-size: 1.5rem;
}
.header-logo__bord {
  display: inline-block;
  margin-right: 4px;
  padding: 14px 1px 13px 5px;
  border: 3px solid #d53d27;
}
.header-logo__link {
  display: block;
  padding: 20px 20px 20px 0;
}
.header-navbar__burger {
  position: relative;
  width: 30px;
  height: 22.5px;
  margin: 20px 0;
  cursor: pointer;
  transition: 0.5s ease-in-out;
  transform: rotate(0deg);
}
.header-navbar__burger-row {
  position: absolute;
  display: block;
  width: 50%;
  height: 3px;
  transition: 0.25s ease-in-out;
  transform: rotate(0deg);
  opacity: 1;
  background: #ffffff;
}
.header-navbar__burger-row:nth-child(even) {
  left: 50%;
  border-radius: 0 3px 3px 0;
}
.header-navbar__burger-row:nth-child(odd) {
  left: 0;
  border-radius: 3px 0 0 3px;
}
.header-navbar__burger-row:nth-child(1), .header-navbar__burger-row:nth-child(2) {
  top: 0;
}
.header-navbar__burger-row:nth-child(3), .header-navbar__burger-row:nth-child(4) {
  top: 9px;
}
.header-navbar__burger-row:nth-child(5), .header-navbar__burger-row:nth-child(6) {
  top: 18px;
}
.header-navbar__burger.active span:nth-child(1), .header-navbar__burger.active span:nth-child(6) {
  transform: rotate(45deg);
}
.header-navbar__burger.active span:nth-child(2), .header-navbar__burger.active span:nth-child(5) {
  transform: rotate(-45deg);
}
.header-navbar__burger.active span:nth-child(1) {
  top: 3.5px;
  left: 2.5px;
}
.header-navbar__burger.active span:nth-child(2) {
  top: 3.5px;
  left: calc(50% - 2.5px);
}
.header-navbar__burger.active span:nth-child(3) {
  left: -50%;
  opacity: 0;
}
.header-navbar__burger.active span:nth-child(4) {
  left: 100%;
  opacity: 0;
}
.header-navbar__burger.active span:nth-child(5) {
  top: 14.5px;
  left: 2.5px;
}
.header-navbar__burger.active span:nth-child(6) {
  top: 14.5px;
  left: calc(50% - 2.5px);
}
.header-navbar__list.active {
  position: absolute;
  top: 100%;
  right: 20px;
  display: block;
}
.header-navbar__link {
  display: inline-block;
  padding: 20px 10px;
  transition: color 0.5s;
  font-size: 1.125rem;
  letter-spacing: 0.1rem;
}
.header-navbar__link:hover, .header-navbar__link:focus {
  color: #d66926;
}

.header-content {
  position: relative;
  z-index: 1;
}
.header-content__action {
  display: grid;
  justify-content: center;
  gap: 20px;
}
.skills__container {
  display: grid;
}
.skills__action {
  display: flex;
  justify-content: center;
  margin-top: 20px;
}

.skills-item {
  position: relative;
  overflow: hidden;
  transition: 0.5s;
}
.skills-item__title {
  z-index: 1;
  margin: 0;
  letter-spacing: 0.1em;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.skills-item__link {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
  padding: 20px;
  transition: color 0.5s;
}
.skills-item__image {
  transition: transform 0.5s;
  background-color: #2d3651;
  background-repeat: no-repeat;
  background-position: center;
  background-size: cover;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.skills-item__overlay {
  transition: opacity 0.5s;
  opacity: 0.8;
  background-color: #2d3651;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}
.skills-item:hover .skills-item__link {
  color: #d66926;
}
.skills-item:hover .skills-item__image {
  transform: scale(1.1);
}
.skills-item:hover .skills-item__overlay {
  opacity: 0.95;
}

.skills-item:nth-of-type(1) {
  grid-area: ga1;
}

.skills-item:nth-of-type(2) {
  grid-area: ga2;
}

.skills-item:nth-of-type(3) {
  grid-area: ga3;
}

.skills-item:nth-of-type(4) {
  grid-area: ga4;
}

.skills-item:nth-of-type(5) {
  grid-area: ga5;
}

.skills-item:nth-of-type(6) {
  grid-area: ga6;
}

.skills-item:nth-of-type(7) {
  grid-area: ga7;
}

.skills-item:nth-of-type(8) {
  grid-area: ga8;
}

.skills-item:nth-of-type(9) {
  grid-area: ga9;
}

.about {
  background-color: #e5e5e5;
  letter-spacing: 0.055em;
}
.about__containter {
  display: grid;
}
.about__title {
  line-height: 1.2em;
  letter-spacing: 0.1em;
  color: #2d3651;
  margin-top: 0;
}
.about__paragraph {
  line-height: 1.15;
  color: #637588;
}
.about__paragraph:first-of-type {
  position: relative;
  margin-top: -5px;
}
.about__paragraph:first-of-type::after {
  position: absolute;
  top: 0;
  width: 2px;
  height: 200px;
  content: "";
  background-color: rgba(99, 117, 136, 0.1);
}
.about__paragraph:last-of-type {
  margin: 0;
}
.about__image {
  display: grid;
  align-items: center;
  justify-items: center;
}
.about__image img {
  max-width: 100%;
  max-height: 480px;
}

.form {
  padding: 30px 0;
  background-color: #2d3651;
}
.form__container {
  display: grid;
  gap: 20px;
}
.form-item__input {
  display: block;
  width: 100%;
  height: 60px;
  padding-right: 30px;
  padding-left: 30px;
  letter-spacing: 0.15em;
  color: #ffffff;
  background-color: rgba(255, 255, 255, 0.05);
  border: 2px solid rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.25);
  font-size: 1.125rem;
  transition: background-color 0.5s, border-color 0.5s;
}
.form-item__input:hover, .form-item__input:focus {
  border-color: rgba(255, 255, 255, 0.15);
  border-bottom-color: #ffffff;
  background-color: rgba(255, 255, 255, 0.15);
}

input:focus {
  outline: none;
}

.form .btn--primary {
  display: block;
  width: 100%;
  font-size: 1.125rem;
  color: #ffffff;
  border-color: rgba(255, 255, 255, 0);
  border-bottom-color: rgba(255, 255, 255, 0.2);
  background-color: rgba(255, 255, 255, 0.1);
}
.form .btn--primary:hover, .form .btn--primary:focus {
  cursor: pointer;
  border-color: #ffffff;
  background-color: #d66926;
}
.posts__title {
  margin-top: 0;
}
.posts__grid {
  display: grid;
  gap: 20px;
  padding-bottom: 20px;
}
.posts-art {
  background-color: #f2f2f2;
  transition: background-color 0.5s;
}
.posts-art:hover {
  background-color: #d8d8d8;
}
.posts-art__link {
  display: grid;
  height: 100%;
  grid-template-rows: 300px 1fr;
  overflow: hidden;
  transition: 0.5s;
}
.posts-art__img {
  display: flex;
  justify-content: center;
  overflow: hidden;
}
.posts-art__img img {
  transition: transform 0.5s;
  width: 100%;
  object-fit: cover;
}
.posts-art:hover .posts-art__img img {
  transform: scale(1.1);
}
.posts-art__descript {
  padding: 20px;
  display: grid;
  justify-items: center;
  align-content: center;
}
.posts-art__descript h3 {
  text-align: center;
  letter-spacing: 0.05em;
  color: #637588;
  font-size: 1.125rem;
  font-family: "Roboto Slab", serif;
  transition: color 0.5s;
}
.posts-art.posts-art:hover h3 {
  color: #2d3651;
}
.posts-art__descript p {
  text-align: center;
  color: #637588;
  transition: color 0.5s;
}
.posts-art:hover p {
  color: #2d3651;
}
.posts__action {
  display: flex;
  justify-content: center;
}

.posts-art:nth-of-type(1) {
  grid-area: a1;
}

.posts-art:nth-of-type(2) {
  grid-area: a2;
}

.posts-art:nth-of-type(3) {
  grid-area: a3;
}

.posts-art:nth-of-type(4) {
  grid-area: a4;
}

.posts-art:nth-of-type(5) {
  grid-area: a5;
}

.posts-art:nth-of-type(6) {
  grid-area: a6;
}

@media (min-width: 576px) {
  .btn--primary {
    width: 350px;
  }
  .header-content__action {
    grid-template-columns: repeat(auto-fit, minmax(2em, max-content));
  }
  .skills {
    padding: 10px;
  }
  .skills__action {
    margin-bottom: 30px;
  }
}

@media (min-height: 691px) {
  .skills-item {
    min-height: calc(33.333vh - 13.3333333333px);
  }
}

@media (min-width: 768px) {
  .header-navbar__burger {
    display: none;
  }
  .header-navbar__list {
    display: grid;
    justify-content: end;
    gap: 20px;
    grid-template-columns: repeat(auto-fit, minmax(2em, max-content));
    margin: 0 -10px 0;
    padding: 0;
    list-style: none;
  }
  .header-navbar__link {
    padding: 20px 10px;
  }
  .skills-item__title {
    font-size: 1.25rem;
  }
  .form__container {
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (min-width: 992px) {
  h1 {
    font-size: 3.75rem;
  }
  .btn {
    font-size: 1.125rem;
  }
  .btn--light {
    width: 250px;
    height: 60px;
  }
  .header-content__title {
    margin: 0 0 53px 0;
  }
  .skills__container {
    gap: 10px;
    grid-template-areas: "ga1 ga1 ga2 ga3" "ga4 ga5 ga5 ga6" "ga7 ga8 ga9 ga6";
  }
  .about {
    padding-top: 100px;
    padding-bottom: 100px;
  }
  .about__containter {
    grid-template-columns: 1fr 271px;
    gap: 100px;
  }
  .about__title {
    font-size: 2.5rem;
    margin-bottom: 3rem;
  }
  .about__paragraph {
    font-size: 1.125rem;
  }
  .about__paragraph:first-of-type::after {
    right: -50px;
  }
  .posts {
    padding-top: 100px;
    padding-bottom: 100px;
  }
  .posts__title {
    font-size: 2.5rem;
    margin-bottom: 3rem;
  }
  .posts__grid {
    grid-template-areas: "a1 a1 a2 a3" "a4 a5 a6 a6";
    grid-template-columns: repeat(4, 1fr);
  }
}

@media (max-width: 991.8px) {
  .btn--light {
    width: 170px;
    height: 40px;
  }
}

@media (max-width: 991.8px) and (min-width: 768px) {
  h1 {
    font-size: 2.5rem;
  }
  .btn--light {
    width: 200px;
    height: 50px;
  }
  .header-content__title {
    margin: 0 0 43px;
  }
  .skills__container {
    gap: 10px;
    grid-template-areas: "ga1 ga1 ga2" "ga3 ga4 ga4" "ga5 ga5 ga6" "ga7 ga8 ga6" "ga7 ga9 ga9";
  }
  .about {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .about__containter {
    grid-template-columns: 1fr 271px;
    gap: 40px;
  }
  .about__title {
    font-size: 2rem;
    margin-bottom: 2.625rem;
  }
  .about__paragraph:first-of-type::after {
    right: -20px;
  }
  .posts {
    padding-top: 80px;
    padding-bottom: 80px;
  }
  .posts__title {
    font-size: 2rem;
    margin-bottom: 2.625rem;
  }
  .posts__grid {
    grid-template-areas: "a1 a1 a2" "a3 a4 a4" "a5 a5 a6";
    grid-template-columns: repeat(3, 1fr);
  }
}

@media (max-width: 767.8px) {
  h1 {
    font-size: 1.875rem;
  }
  .header-menu {
    background-color: rgba(68, 89, 110, 0.25);
    box-shadow: -3px 3px 20px -10px black;
  }
  .header-navbar {
    display: flex;
    justify-content: flex-end;
  }
  .header-navbar__list {
    display: none;
    text-align: right;
    background-color: rgba(68, 89, 110, 0.9);
    margin: 0;
    padding: 0;
    list-style: none;
    box-shadow: -3px 3px 20px -10px black;
  }
  .header-navbar__link {
    padding: 10px 20px;
  }
  .header-navbar__item {
    margin: 20px 10px;
  }
  .header-content__title {
    margin: 0 0 33px;
  }
  .skills-item__title {
    font-size: 1.125rem;
  }
  .about {
    padding-top: 60px;
    padding-bottom: 60px;
  }
  .posts {
    padding-top: 60px;
    padding-bottom: 60px;
  }
  .posts__title {
    margin-bottom: 2.25rem;
    font-size: 1.5rem;
  }
}

@media (max-width: 767.8px) and (min-width: 576px) {
  .skills__container {
    gap: 10px;
    grid-template-areas: "ga1 ga2" "ga3 ga2" "ga4 ga4" "ga5 ga6" "ga5 ga7" "ga8 ga9";
  }
  .about__containter {
    gap: 20px;
    grid-template-columns: 1fr 236px;
  }
  .about__title {
    margin-bottom: 2.25rem;
    font-size: 1.5rem;
  }
  .about__paragraph:first-of-type::after {
    right: -10px;
  }
  .form__container {
    grid-template-columns: repeat(2, 1fr);
  }
  .form-item:nth-of-type(1) {
    grid-column: 1/span 2;
  }
  .posts__title {
    margin-bottom: 2.25rem;
    font-size: 1.5rem;
  }
  .posts__grid {
    grid-template-areas: "a1 a2" "a3 a4" "a5 a6";
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-height: 690px) {
  .skills-item {
    min-height: 216.6666666667px;
  }
}

@media (max-width: 575.8px) {
  .btn--primary {
    width: 100%;
  }
  .skills {
    padding: 20px;
  }
  .skills__container {
    gap: 20px;
    grid-template-areas: "ga1" "ga2" "ga3" "ga4" "ga5" "ga6" "ga7" "ga8" "ga9";
  }
  .about__containter {
    grid-template-columns: 1fr;
    gap: 20px;
  }
  .about__title {
    margin-bottom: 2.25rem;
    text-align: center;
    font-size: 1.5rem;
  }
  .about__paragraph:first-of-type::after {
    display: none;
  }
  .posts__title {
    text-align: center;
  }
  .posts__grid {
    grid-template-areas: "a1" "a2" "a3" "a4" "a5" "a6";
    grid-template-columns: repeat(1, 1fr);
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */